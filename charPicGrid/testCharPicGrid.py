import unittest

import charPicGrid

class TestCharPicGrid(unittest.TestCase):

    def testConversion(self):
        data = {
            (1, 1) : (1, 7),
            (1, 2) : (2, 7),
            (2, 0) : (0, 6),
            (2, 1) : (1, 6),
            (2, 2) : (2, 6),
            (2, 3) : (3, 6),
            (3, 0) : (0, 5),
            (3, 1) : (1, 5),
            (3, 2) : (2, 5),
            (3, 3) : (3, 5),
            (3, 4) : (4, 5)
        }

        i = 0
        for p1, p2 in data.items():
            self.assertTrue(p1[1] == p2[0])
            self.assertTrue(p2[1] == 9 - 1 - p1[0], f"{p2[1]} {9-1-p1[0]} i: {i}")
            i += 1

    def testGridOperations(self):
        data = {
            "original": [['.', '.', '.', '.', '.', '.'],
                        ['.', 'O', 'O', '.', '.', '.'],
                        ['O', 'O', 'O', 'O', '.', '.'],
                        ['O', 'O', 'O', 'O', 'O', '.'],
                        ['.', 'O', 'O', 'O', 'O', 'O'],
                        ['O', 'O', 'O', 'O', 'O', '.'],
                        ['O', 'O', 'O', 'O', '.', '.'],
                        ['.', 'O', 'O', '.', '.', '.'],
                        ['.', '.', '.', '.', '.', '.']],
            "expand": [['.', '.', '.', '.', '.', '.', '.', '.', '.'],
                       ['.', 'O', 'O', '.', '.', '.', '.', '.', '.'],
                       ['O', 'O', 'O', 'O', '.', '.', '.', '.', '.'],
                       ['O', 'O', 'O', 'O', 'O', '.', '.', '.', '.'],
                       ['.', 'O', 'O', 'O', 'O', 'O', '.', '.', '.'],
                       ['O', 'O', 'O', 'O', 'O', '.', '.', '.', '.'],
                       ['O', 'O', 'O', 'O', '.', '.', '.', '.', '.'],
                       ['.', 'O', 'O', '.', '.', '.', '.', '.', '.'],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.']],
            "rotate": [['.', '.', 'O', 'O', '.', 'O', 'O', '.', '.'],
                       ['.', 'O', 'O', 'O', 'O', 'O', 'O', 'O', '.'],
                       ['.', 'O', 'O', 'O', 'O', 'O', 'O', 'O', '.'],
                       ['.', '.', 'O', 'O', 'O', 'O', 'O', '.', '.'],
                       ['.', '.', '.', 'O', 'O', 'O', '.', '.', '.'],
                       ['.', '.', '.', '.', 'O', '.', '.', '.', '.'],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.'],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.'],
                       ['.', '.', '.', '.', '.', '.', '.', '.', '.']],
            "final": [['.', '.', 'O', 'O', '.', 'O', 'O', '.', '.'],
                      ['.', 'O', 'O', 'O', 'O', 'O', 'O', 'O', '.'],
                      ['.', 'O', 'O', 'O', 'O', 'O', 'O', 'O', '.'],
                      ['.', '.', 'O', 'O', 'O', 'O', 'O', '.', '.'],
                      ['.', '.', '.', 'O', 'O', 'O', '.', '.', '.'],
                      ['.', '.', '.', '.', 'O', '.', '.', '.', '.']]
        }

        self.assertEqual(data["expand"], charPicGrid.expand(data["original"]))

        self.assertEqual(data["rotate"], charPicGrid.rotate(data["expand"]))

        self.assertEqual(data["final"], charPicGrid.trim(data["rotate"]))


if __name__ == "__main__":
    unittest.main()